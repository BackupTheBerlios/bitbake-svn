--- pango-1.2.5/modules/indic/indic-ot.h	Fri Aug  8 12:05:01 2003
+++ pango-1.2.5-new/modules/indic/indic-ot.h	Thu Dec 18 14:38:44 2003
@@ -9,7 +9,8 @@
 #ifndef __INDIC_OT_H__
 #define __INDIC_OT_H__
 
-#include <freetype/freetype.h>
+#include <ft2build.h>
+#include FT_FREETYPE_H
 #include <pango/pango-glyph.h>
 #include <pango/pango-types.h>
 #include "mprefixups.h"
--- pango-1.2.5/pango/opentype/ftxopen.h	Fri Aug  8 12:05:10 2003
+++ pango-1.2.5-new/pango/opentype/ftxopen.h	Thu Dec 18 14:38:41 2003
@@ -22,7 +22,8 @@
 #ifndef FTXOPEN_H
 #define FTXOPEN_H
 
-#include <freetype/freetype.h>
+#include <ft2build.h>
+#include FT_FREETYPE_H
 
 #ifdef __cplusplus
 extern "C" {
--- pango-1.2.5/pango/opentype/pango-ot-info.c	Wed Apr 16 16:48:20 2003
+++ pango-1.2.5-new/pango/opentype/pango-ot-info.c	Thu Dec 18 13:48:40 2003
@@ -21,8 +21,9 @@
 
 #include "pango-ot-private.h"
 #include "fterrcompat.h"
+
 #include <freetype/internal/ftobjs.h>
-#include <freetype/ftmodule.h>
+//#include <freetype/config/ftmodule.h>
 
 static void pango_ot_info_class_init (GObjectClass *object_class);
 static void pango_ot_info_finalize   (GObject *object);
--- pango-1.2.5/pango/opentype/pango-ot-private.h	Tue Dec 19 22:41:36 2000
+++ pango-1.2.5-new/pango/opentype/pango-ot-private.h	Wed Dec 17 20:53:02 2003
@@ -22,7 +22,8 @@
 #ifndef __PANGO_OT_PRIVATE_H__
 #define __PANGO_OT_PRIVATE_H__
 
-#include <freetype/freetype.h>
+#include <ft2build.h>
+#include FT_FREETYPE_H
 
 #include <glib-object.h>
 
--- pango-1.2.5/pango/pango-enum-types.c	Thu Jul 24 14:12:13 2003
+++ pango-1.2.5-new/pango/pango-enum-types.c	Wed Dec 31 18:00:00 1969
@@ -1,236 +0,0 @@
-
-/* Generated data (by glib-mkenums) */
-
-#include <pango.h>
-
-/* enumerations from "pango-attributes.h" */
-GType
-pango_attr_type_get_type (void)
-{
-  static GType etype = 0;
-  if (etype == 0) {
-    static const GEnumValue values[] = {
-      { PANGO_ATTR_INVALID, "PANGO_ATTR_INVALID", "invalid" },
-      { PANGO_ATTR_LANGUAGE, "PANGO_ATTR_LANGUAGE", "language" },
-      { PANGO_ATTR_FAMILY, "PANGO_ATTR_FAMILY", "family" },
-      { PANGO_ATTR_STYLE, "PANGO_ATTR_STYLE", "style" },
-      { PANGO_ATTR_WEIGHT, "PANGO_ATTR_WEIGHT", "weight" },
-      { PANGO_ATTR_VARIANT, "PANGO_ATTR_VARIANT", "variant" },
-      { PANGO_ATTR_STRETCH, "PANGO_ATTR_STRETCH", "stretch" },
-      { PANGO_ATTR_SIZE, "PANGO_ATTR_SIZE", "size" },
-      { PANGO_ATTR_FONT_DESC, "PANGO_ATTR_FONT_DESC", "font-desc" },
-      { PANGO_ATTR_FOREGROUND, "PANGO_ATTR_FOREGROUND", "foreground" },
-      { PANGO_ATTR_BACKGROUND, "PANGO_ATTR_BACKGROUND", "background" },
-      { PANGO_ATTR_UNDERLINE, "PANGO_ATTR_UNDERLINE", "underline" },
-      { PANGO_ATTR_STRIKETHROUGH, "PANGO_ATTR_STRIKETHROUGH", "strikethrough" },
-      { PANGO_ATTR_RISE, "PANGO_ATTR_RISE", "rise" },
-      { PANGO_ATTR_SHAPE, "PANGO_ATTR_SHAPE", "shape" },
-      { PANGO_ATTR_SCALE, "PANGO_ATTR_SCALE", "scale" },
-      { 0, NULL, NULL }
-    };
-    etype = g_enum_register_static ("PangoAttrType", values);
-  }
-  return etype;
-}
-
-GType
-pango_underline_get_type (void)
-{
-  static GType etype = 0;
-  if (etype == 0) {
-    static const GEnumValue values[] = {
-      { PANGO_UNDERLINE_NONE, "PANGO_UNDERLINE_NONE", "none" },
-      { PANGO_UNDERLINE_SINGLE, "PANGO_UNDERLINE_SINGLE", "single" },
-      { PANGO_UNDERLINE_DOUBLE, "PANGO_UNDERLINE_DOUBLE", "double" },
-      { PANGO_UNDERLINE_LOW, "PANGO_UNDERLINE_LOW", "low" },
-      { 0, NULL, NULL }
-    };
-    etype = g_enum_register_static ("PangoUnderline", values);
-  }
-  return etype;
-}
-
-
-/* enumerations from "pango-coverage.h" */
-GType
-pango_coverage_level_get_type (void)
-{
-  static GType etype = 0;
-  if (etype == 0) {
-    static const GEnumValue values[] = {
-      { PANGO_COVERAGE_NONE, "PANGO_COVERAGE_NONE", "none" },
-      { PANGO_COVERAGE_FALLBACK, "PANGO_COVERAGE_FALLBACK", "fallback" },
-      { PANGO_COVERAGE_APPROXIMATE, "PANGO_COVERAGE_APPROXIMATE", "approximate" },
-      { PANGO_COVERAGE_EXACT, "PANGO_COVERAGE_EXACT", "exact" },
-      { 0, NULL, NULL }
-    };
-    etype = g_enum_register_static ("PangoCoverageLevel", values);
-  }
-  return etype;
-}
-
-
-/* enumerations from "pango-font.h" */
-GType
-pango_style_get_type (void)
-{
-  static GType etype = 0;
-  if (etype == 0) {
-    static const GEnumValue values[] = {
-      { PANGO_STYLE_NORMAL, "PANGO_STYLE_NORMAL", "normal" },
-      { PANGO_STYLE_OBLIQUE, "PANGO_STYLE_OBLIQUE", "oblique" },
-      { PANGO_STYLE_ITALIC, "PANGO_STYLE_ITALIC", "italic" },
-      { 0, NULL, NULL }
-    };
-    etype = g_enum_register_static ("PangoStyle", values);
-  }
-  return etype;
-}
-
-GType
-pango_variant_get_type (void)
-{
-  static GType etype = 0;
-  if (etype == 0) {
-    static const GEnumValue values[] = {
-      { PANGO_VARIANT_NORMAL, "PANGO_VARIANT_NORMAL", "normal" },
-      { PANGO_VARIANT_SMALL_CAPS, "PANGO_VARIANT_SMALL_CAPS", "small-caps" },
-      { 0, NULL, NULL }
-    };
-    etype = g_enum_register_static ("PangoVariant", values);
-  }
-  return etype;
-}
-
-GType
-pango_weight_get_type (void)
-{
-  static GType etype = 0;
-  if (etype == 0) {
-    static const GEnumValue values[] = {
-      { PANGO_WEIGHT_ULTRALIGHT, "PANGO_WEIGHT_ULTRALIGHT", "ultralight" },
-      { PANGO_WEIGHT_LIGHT, "PANGO_WEIGHT_LIGHT", "light" },
-      { PANGO_WEIGHT_NORMAL, "PANGO_WEIGHT_NORMAL", "normal" },
-      { PANGO_WEIGHT_BOLD, "PANGO_WEIGHT_BOLD", "bold" },
-      { PANGO_WEIGHT_ULTRABOLD, "PANGO_WEIGHT_ULTRABOLD", "ultrabold" },
-      { PANGO_WEIGHT_HEAVY, "PANGO_WEIGHT_HEAVY", "heavy" },
-      { 0, NULL, NULL }
-    };
-    etype = g_enum_register_static ("PangoWeight", values);
-  }
-  return etype;
-}
-
-GType
-pango_stretch_get_type (void)
-{
-  static GType etype = 0;
-  if (etype == 0) {
-    static const GEnumValue values[] = {
-      { PANGO_STRETCH_ULTRA_CONDENSED, "PANGO_STRETCH_ULTRA_CONDENSED", "ultra-condensed" },
-      { PANGO_STRETCH_EXTRA_CONDENSED, "PANGO_STRETCH_EXTRA_CONDENSED", "extra-condensed" },
-      { PANGO_STRETCH_CONDENSED, "PANGO_STRETCH_CONDENSED", "condensed" },
-      { PANGO_STRETCH_SEMI_CONDENSED, "PANGO_STRETCH_SEMI_CONDENSED", "semi-condensed" },
-      { PANGO_STRETCH_NORMAL, "PANGO_STRETCH_NORMAL", "normal" },
-      { PANGO_STRETCH_SEMI_EXPANDED, "PANGO_STRETCH_SEMI_EXPANDED", "semi-expanded" },
-      { PANGO_STRETCH_EXPANDED, "PANGO_STRETCH_EXPANDED", "expanded" },
-      { PANGO_STRETCH_EXTRA_EXPANDED, "PANGO_STRETCH_EXTRA_EXPANDED", "extra-expanded" },
-      { PANGO_STRETCH_ULTRA_EXPANDED, "PANGO_STRETCH_ULTRA_EXPANDED", "ultra-expanded" },
-      { 0, NULL, NULL }
-    };
-    etype = g_enum_register_static ("PangoStretch", values);
-  }
-  return etype;
-}
-
-GType
-pango_font_mask_get_type (void)
-{
-  static GType etype = 0;
-  if (etype == 0) {
-    static const GFlagsValue values[] = {
-      { PANGO_FONT_MASK_FAMILY, "PANGO_FONT_MASK_FAMILY", "family" },
-      { PANGO_FONT_MASK_STYLE, "PANGO_FONT_MASK_STYLE", "style" },
-      { PANGO_FONT_MASK_VARIANT, "PANGO_FONT_MASK_VARIANT", "variant" },
-      { PANGO_FONT_MASK_WEIGHT, "PANGO_FONT_MASK_WEIGHT", "weight" },
-      { PANGO_FONT_MASK_STRETCH, "PANGO_FONT_MASK_STRETCH", "stretch" },
-      { PANGO_FONT_MASK_SIZE, "PANGO_FONT_MASK_SIZE", "size" },
-      { 0, NULL, NULL }
-    };
-    etype = g_flags_register_static ("PangoFontMask", values);
-  }
-  return etype;
-}
-
-
-/* enumerations from "pango-layout.h" */
-GType
-pango_alignment_get_type (void)
-{
-  static GType etype = 0;
-  if (etype == 0) {
-    static const GEnumValue values[] = {
-      { PANGO_ALIGN_LEFT, "PANGO_ALIGN_LEFT", "left" },
-      { PANGO_ALIGN_CENTER, "PANGO_ALIGN_CENTER", "center" },
-      { PANGO_ALIGN_RIGHT, "PANGO_ALIGN_RIGHT", "right" },
-      { 0, NULL, NULL }
-    };
-    etype = g_enum_register_static ("PangoAlignment", values);
-  }
-  return etype;
-}
-
-GType
-pango_wrap_mode_get_type (void)
-{
-  static GType etype = 0;
-  if (etype == 0) {
-    static const GEnumValue values[] = {
-      { PANGO_WRAP_WORD, "PANGO_WRAP_WORD", "word" },
-      { PANGO_WRAP_CHAR, "PANGO_WRAP_CHAR", "char" },
-      { PANGO_WRAP_WORD_CHAR, "PANGO_WRAP_WORD_CHAR", "word-char" },
-      { 0, NULL, NULL }
-    };
-    etype = g_enum_register_static ("PangoWrapMode", values);
-  }
-  return etype;
-}
-
-
-/* enumerations from "pango-tabs.h" */
-GType
-pango_tab_align_get_type (void)
-{
-  static GType etype = 0;
-  if (etype == 0) {
-    static const GEnumValue values[] = {
-      { PANGO_TAB_LEFT, "PANGO_TAB_LEFT", "left" },
-      { 0, NULL, NULL }
-    };
-    etype = g_enum_register_static ("PangoTabAlign", values);
-  }
-  return etype;
-}
-
-
-/* enumerations from "pango-types.h" */
-GType
-pango_direction_get_type (void)
-{
-  static GType etype = 0;
-  if (etype == 0) {
-    static const GEnumValue values[] = {
-      { PANGO_DIRECTION_LTR, "PANGO_DIRECTION_LTR", "ltr" },
-      { PANGO_DIRECTION_RTL, "PANGO_DIRECTION_RTL", "rtl" },
-      { PANGO_DIRECTION_TTB_LTR, "PANGO_DIRECTION_TTB_LTR", "ttb-ltr" },
-      { PANGO_DIRECTION_TTB_RTL, "PANGO_DIRECTION_TTB_RTL", "ttb-rtl" },
-      { 0, NULL, NULL }
-    };
-    etype = g_enum_register_static ("PangoDirection", values);
-  }
-  return etype;
-}
-
-
-/* Generated data ends here */
-
--- pango-1.2.5/pango/pango-enum-types.h	Thu Jul 24 14:11:58 2003
+++ pango-1.2.5-new/pango/pango-enum-types.h	Wed Dec 31 18:00:00 1969
@@ -1,64 +0,0 @@
-
-/* Generated data (by glib-mkenums) */
-
-#ifndef __PANGO_ENUM_TYPES_H__
-#define __PANGO_ENUM_TYPES_H__
-
-#include <glib-object.h>
-
-G_BEGIN_DECLS
-
-/* enumerations from "pango-attributes.h" */
-
-GType pango_attr_type_get_type (void);
-#define PANGO_TYPE_ATTR_TYPE (pango_attr_type_get_type())
-
-GType pango_underline_get_type (void);
-#define PANGO_TYPE_UNDERLINE (pango_underline_get_type())
-
-/* enumerations from "pango-coverage.h" */
-
-GType pango_coverage_level_get_type (void);
-#define PANGO_TYPE_COVERAGE_LEVEL (pango_coverage_level_get_type())
-
-/* enumerations from "pango-font.h" */
-
-GType pango_style_get_type (void);
-#define PANGO_TYPE_STYLE (pango_style_get_type())
-
-GType pango_variant_get_type (void);
-#define PANGO_TYPE_VARIANT (pango_variant_get_type())
-
-GType pango_weight_get_type (void);
-#define PANGO_TYPE_WEIGHT (pango_weight_get_type())
-
-GType pango_stretch_get_type (void);
-#define PANGO_TYPE_STRETCH (pango_stretch_get_type())
-
-GType pango_font_mask_get_type (void);
-#define PANGO_TYPE_FONT_MASK (pango_font_mask_get_type())
-
-/* enumerations from "pango-layout.h" */
-
-GType pango_alignment_get_type (void);
-#define PANGO_TYPE_ALIGNMENT (pango_alignment_get_type())
-
-GType pango_wrap_mode_get_type (void);
-#define PANGO_TYPE_WRAP_MODE (pango_wrap_mode_get_type())
-
-/* enumerations from "pango-tabs.h" */
-
-GType pango_tab_align_get_type (void);
-#define PANGO_TYPE_TAB_ALIGN (pango_tab_align_get_type())
-
-/* enumerations from "pango-types.h" */
-
-GType pango_direction_get_type (void);
-#define PANGO_TYPE_DIRECTION (pango_direction_get_type())
-
-G_END_DECLS
-
-#endif /* __PANGO_ENUM_TYPES_H__ */
-
-/* Generated data ends here */
-
--- pango-1.2.5/pango/pango-ot.h	Mon Jun  3 19:20:47 2002
+++ pango-1.2.5-new/pango/pango-ot.h	Thu Dec 18 14:37:56 2003
@@ -22,7 +22,8 @@
 #ifndef __PANGO_OT_H__
 #define __PANGO_OT_H__
 
-#include <freetype/freetype.h>
+#include <ft2build.h>
+#include FT_FREETYPE_H
 #include <pango/pango-glyph.h>
 
 G_BEGIN_DECLS
--- pango-1.2.5/pango/pangoft2.c	Fri Aug  8 12:05:05 2003
+++ pango-1.2.5-new/pango/pangoft2.c	Thu Dec 18 14:34:50 2003
@@ -28,7 +28,8 @@
 #include <glib.h>
 #include <glib/gprintf.h>
 
-#include <freetype/freetype.h>
+#include <ft2build.h>
+#include FT_FREETYPE_H
 
 #include "pango-utils.h"
 #include "pangoft2.h"
--- pango-1.2.5/pango/pangoft2.h	Wed Jul  3 17:30:36 2002
+++ pango-1.2.5-new/pango/pangoft2.h	Thu Dec 18 14:36:12 2003
@@ -23,7 +23,8 @@
 #ifndef __PANGOFT2_H__
 #define __PANGOFT2_H__
 
-#include <freetype/freetype.h>
+#include <ft2build.h>
+#include FT_FREETYPE_H
 
 #include <fontconfig/fontconfig.h>
 
