
#
# Patch managed by http://www.mn-logistik.de/unsupported/pxa250/patcher
#

--- findutils-4.1.20/./configure.in~configure
+++ findutils-4.1.20/./configure.in
@@ -1,5 +1,6 @@
 dnl Process this file with autoconf to produce a configure script.
-AC_INIT(find/pred.c)
+AC_INIT
+AC_CONFIG_SRCDIR([find/pred.c])
 AM_CONFIG_HEADER(config.h)
 AC_CANONICAL_HOST
 
@@ -23,7 +24,7 @@
 AC_AIX
 AC_MINIX
 AC_ISC_POSIX
-AC_PROG_CC_STDC
+
 AM_C_PROTOTYPES
 AC_PROG_INSTALL
 AC_PROG_RANLIB
@@ -48,25 +49,25 @@
 AC_MSG_CHECKING(how to get filesystem type)
 fstype=no
 # The order of these tests is important.
-AC_TRY_CPP([#include <sys/statvfs.h>
-#include <sys/fstyp.h>], AC_DEFINE(FSTYPE_STATVFS, 1, [Define to use SVR4 statvfs to get filesystem type.]) fstype=SVR4)
+AC_PREPROC_IFELSE([AC_LANG_SOURCE([[#include <sys/statvfs.h>
+#include <sys/fstyp.h>]])],[AC_DEFINE(FSTYPE_STATVFS, 1, Define to use SVR4 statvfs to get filesystem type.) fstype=SVR4],[])
 if test $fstype = no; then
-AC_TRY_CPP([#include <sys/statfs.h>
-#include <sys/fstyp.h>], AC_DEFINE(FSTYPE_USG_STATFS, 1, [Define to use SVR3.2 statfs to get filesystem type.]) fstype=SVR3)
+AC_PREPROC_IFELSE([AC_LANG_SOURCE([[#include <sys/statfs.h>
+#include <sys/fstyp.h>]])],[AC_DEFINE(FSTYPE_USG_STATFS, 1, Define to use SVR3.2 statfs to get filesystem type.) fstype=SVR3],[])
 fi
 if test $fstype = no; then
-AC_TRY_CPP([#include <sys/statfs.h>
-#include <sys/vmount.h>], AC_DEFINE(FSTYPE_AIX_STATFS, 1, [Define to use AIX3 statfs to get filesystem type.]) fstype=AIX)
+AC_PREPROC_IFELSE([AC_LANG_SOURCE([[#include <sys/statfs.h>
+#include <sys/vmount.h>]])],[AC_DEFINE(FSTYPE_AIX_STATFS, 1, Define to use AIX3 statfs to get filesystem type.) fstype=AIX],[])
 fi
 if test $fstype = no; then  
-AC_TRY_CPP([#include <mntent.h>], AC_DEFINE(FSTYPE_MNTENT, 1, [Define to use 4.3BSD getmntent to get filesystem type.]) fstype=4.3BSD)
+AC_PREPROC_IFELSE([AC_LANG_SOURCE([[#include <mntent.h>]])],[AC_DEFINE(FSTYPE_MNTENT, 1, Define to use 4.3BSD getmntent to get filesystem type.) fstype=4.3BSD],[])
 fi
 if test $fstype = no; then  
 AC_EGREP_HEADER(f_type;, sys/mount.h, AC_DEFINE(FSTYPE_STATFS, 1, [Define to use 4.4BSD and OSF1 statfs to get filesystem type.]) fstype=4.4BSD/OSF1)
 fi
 if test $fstype = no; then  
-AC_TRY_CPP([#include <sys/mount.h>
-#include <sys/fs_types.h>], AC_DEFINE(FSTYPE_GETMNT, 1, [Define to use Ultrix getmnt to get filesystem type.]) fstype=Ultrix)
+AC_PREPROC_IFELSE([AC_LANG_SOURCE([[#include <sys/mount.h>
+#include <sys/fs_types.h>]])],[AC_DEFINE(FSTYPE_GETMNT, 1, Define to use Ultrix getmnt to get filesystem type.) fstype=Ultrix],[])
 fi
 AC_MSG_RESULT($fstype)
 
@@ -105,11 +106,11 @@
 # the ANSI2KNR-filtering rules.
 #LIBOBJS=`echo $LIBOBJS|sed 's/\.o /\$U.o /g;s/\.o$/\$U.o/'`
 AC_CONFIG_SUBDIRS(gnulib)
-AC_OUTPUT(
-	Makefile 
+AC_CONFIG_FILES([Makefile 
 	find/Makefile find/testsuite/Makefile
 	xargs/Makefile xargs/testsuite/Makefile
 	locate/Makefile locate/testsuite/Makefile
 	intl/Makefile po/Makefile.in po/Makefile
 	doc/Makefile lib/Makefile
-	)
+	])
+AC_OUTPUT
--- findutils-4.1.20/./gnulib/configure.ac~configure
+++ findutils-4.1.20/./gnulib/configure.ac
@@ -1,5 +1,5 @@
 # Process this file with autoconf to produce a configure script.
-AC_INIT(dummy,0)
+AC_INIT([dummy],[0])
 AM_INIT_AUTOMAKE
 
 AM_CONFIG_HEADER(config.h)
@@ -95,4 +95,5 @@
 gl_YESNO
 
 
-AC_OUTPUT([Makefile lib/Makefile m4/Makefile po/Makefile])
+AC_CONFIG_FILES([Makefile lib/Makefile m4/Makefile po/Makefile])
+AC_OUTPUT
