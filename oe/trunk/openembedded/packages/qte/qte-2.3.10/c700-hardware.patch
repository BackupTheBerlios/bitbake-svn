
#
# Patch managed by http://www.holgerschurig.de/patcher.html
#

--- qt-2.3.9-snapshot-20050114/src/kernel/qwindowsystem_qws.cpp~c700-hardware
+++ qt-2.3.9-snapshot-20050114/src/kernel/qwindowsystem_qws.cpp
@@ -178,7 +178,7 @@
 static QRect maxwindow_rect;
 extern Q_EXPORT QRect qt_maxWindowRect;
 static const char *defaultMouse =
-#if defined(QT_QWS_CASSIOPEIA) || defined(QT_QWS_IPAQ) || defined(QT_QWS_SL5XXX) || defined(QT_QWS_YOPY) || defined(QWS_CUSTOMTOUCHPANEL)
+#if defined(QT_QWS_CASSIOPEIA) || defined(QT_QWS_IPAQ) || defined(QT_QWS_SL5XXX) || defined(QT_QWS_SLC700) || defined(QT_QWS_YOPY) || defined(QWS_CUSTOMTOUCHPANEL)
     "TPanel"
 #elif defined(QT_KEYPAD_MODE)
     "None"
@@ -3308,7 +3308,7 @@
 void QWSServer::screenSaverSleep()
 {
     qt_screen->blank(TRUE);
-#if !defined(QT_QWS_IPAQ) && !defined(QT_QWS_SL5XXX)
+#if !defined(QT_QWS_IPAQ) && !defined(QT_QWS_SL5XXX) && !defined(QT_QWS_SLC700)
     d->screensavertimer->stop();
 #else
     if ( screensaverinterval ) {
--- qt-2.3.9-snapshot-20050114/src/kernel/qwsmouse_qws.cpp~c700-hardware
+++ qt-2.3.9-snapshot-20050114/src/kernel/qwsmouse_qws.cpp
@@ -87,6 +87,19 @@
 #define QT_QWS_TP_PRESSURE_THRESHOLD 500
 #define QT_QWS_TP_MOVE_LIMIT 50
 #define QT_QWS_TP_JITTER_LIMIT 2
+#elif defined(QT_QWS_SLC700)
+#define QT_QWS_SLC700_RAW
+typedef struct {
+       unsigned short pressure;
+       unsigned short x;
+       unsigned short y;
+      unsigned short millisecs;
+} TS_EVENT;
+#define QT_QWS_TP_SAMPLE_SIZE 10
+#define QT_QWS_TP_MINIMUM_SAMPLES 4
+#define QT_QWS_TP_PRESSURE_THRESHOLD 500
+#define QT_QWS_TP_MOVE_LIMIT 50
+#define QT_QWS_TP_JITTER_LIMIT 2
 #endif
 
 #ifndef QT_QWS_TP_SAMPLE_SIZE
@@ -592,7 +605,7 @@
 	sub[nsub++] = new QAutoMouseSubHandler_intellimouse(fd);
 	notify(fd);
     }
-#if !defined(QT_QWS_IPAQ) && !defined(QT_QWS_SL5XXX) && !defined(QT_QWS_K2)
+#if !defined(QT_QWS_IPAQ) && !defined(QT_QWS_SL5XXX) && !defined(QT_QWS_K2) && !defined(QT_QWS_SLC700)
     char fn[] = "/dev/ttyS?";
     for (int ch='0'; ch<='3'; ch++) {
 	fn[9] = ch;
@@ -1274,7 +1287,7 @@
     numSamples(0), skipCount(0)
 {
     Q_UNUSED(dev);
-#if defined(QT_QWS_IPAQ) || defined(QT_QWS_SL5XXX) || defined(QT_QWS_K2)
+#if defined(QT_QWS_IPAQ) || defined(QT_QWS_SL5XXX) || defined(QT_QWS_K2) || defined(QT_QWS_SLC700)
 #if defined(QT_QWS_IPAQ)
 # ifdef QT_QWS_IPAQ_RAW
     if ((mouseFD = open( "/dev/h3600_tsraw", O_RDONLY | O_NDELAY)) < 0) {
@@ -1284,7 +1297,7 @@
         qWarning( "Cannot open /dev/h3600_ts (%s)", strerror(errno));
 	return;
     }
-#elif defined(QT_QWS_SL5XXX) || defined(QT_QWS_K2)
+#elif defined(QT_QWS_SL5XXX) || defined(QT_QWS_K2) || defined(QT_QWS_SLC700)
 //# ifdef QT_QWS_SL5XXX_TSRAW
 # if 0
     if ((mouseFD = open( "/dev/tsraw", O_RDONLY | O_NDELAY)) < 0) {
@@ -1310,7 +1323,7 @@
 
 QTPanelHandlerPrivate::~QTPanelHandlerPrivate()
 {
-#if defined(QT_QWS_IPAQ) || defined(QT_QWS_SL5XXX) || defined(QT_QWS_K2)
+#if defined(QT_QWS_IPAQ) || defined(QT_QWS_SL5XXX) || defined(QT_QWS_K2) || defined(QT_QWS_SLC700)
     if (mouseFD >= 0)
 	close(mouseFD);
 #endif
@@ -1318,7 +1331,7 @@
 
 void QTPanelHandlerPrivate::readMouseData()
 {
-#if defined(QT_QWS_IPAQ) || defined(QT_QWS_SL5XXX) || defined(QT_QWS_K2)
+#if defined(QT_QWS_IPAQ) || defined(QT_QWS_SL5XXX) || defined(QT_QWS_K2) || defined(QT_QWS_SLC700)
     if(!qt_screen)
 	return;
 
@@ -1337,7 +1350,7 @@
 	uchar *mb = mouseBuf+idx;
 	data = (TS_EVENT *) mb;
 	if(data->pressure >= QT_QWS_TP_PRESSURE_THRESHOLD) {
-#ifdef QT_QWS_SL5XXX
+#if defined(QT_QWS_SL5XXX) || defined(QT_QWS_SLC700)
 	    samples[currSample] = QPoint( 1000 - data->x, data->y );
 #else
 	    samples[currSample] = QPoint( data->x, data->y );
@@ -1997,7 +2010,7 @@
 	    handler = new QTSLibHandlerPrivate();
 #elif defined(QT_QWS_YOPY)
 	    handler = new QYopyTPanelHandlerPrivate(mouseProtocol,mouseDev);
-#elif defined(QT_QWS_IPAQ) || defined(QT_QWS_SL5XXX) || defined(QT_QWS_K2)
+#elif defined(QT_QWS_IPAQ) || defined(QT_QWS_SL5XXX) || defined(QT_QWS_K2) || defined(QT_QWS_SLC700)
 	    handler = new QTPanelHandlerPrivate(mouseProtocol,mouseDev);
 #elif defined(QT_QWS_CASSIOPEIA)
 	    handler = new QVrTPanelHandlerPrivate( mouseProtocol, mouseDev );
